
# simple uses of parentheses

regexp: (a)
tree:   a
length: 1 to 1
ex(0):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(1):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(2):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(3):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(5):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(8):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a

regexp: ((a))
tree:   a
length: 1 to 1
ex(0):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(1):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(2):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(3):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(5):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(8):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a

regexp: a(b)*
tree:   (ab*)
length: 1 to *
ex(0):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(1):  a  a  ab  a  ab  a  ab  ab  a  a  a  ab  ab  a  a  a  ab  a  a  a  ab
ex(2):  abb  a  abb  a  ab  a  ab  ab  a  abb  abb  ab  abb  ab  abb  ab  abb
ex(3):  abbb  a  a  abb  abbb  abbb  a  a  abb  ab  abb  a  abb  a  abbb  a  ab
ex(5):  abb  abb  a  abbbbb  abbb  abb  abbbb  abbbbb  ab  abb  abbbbb  ab
ex(8):  abbb  abbbbbbbb  a  ab  abb  abbbb  abbbb  abbb  a  a  abbbbbb  abb

regexp: a((b))*
tree:   (ab*)
length: 1 to *
ex(0):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(1):  a  a  ab  a  ab  a  ab  ab  a  a  a  ab  ab  a  a  a  ab  a  a  a  ab
ex(2):  abb  a  abb  a  ab  a  ab  ab  a  abb  abb  ab  abb  ab  abb  ab  abb
ex(3):  abbb  a  a  abb  abbb  abbb  a  a  abb  ab  abb  a  abb  a  abbb  a  ab
ex(5):  abb  abb  a  abbbbb  abbb  abb  abbbb  abbbbb  ab  abb  abbbbb  ab
ex(8):  abbb  abbbbbbbb  a  ab  abb  abbbb  abbbb  abbb  a  a  abbbbbb  abb

regexp: (ab)*
tree:   (ab)*
length: 0 to *
ex(0):                                                                        
ex(1):      ab    ab    ab  ab        ab  ab        ab        ab        ab    
ex(2):  ab  ab    abab  abab  ab  abab  ab  abab  ab  abab    ab      abab  ab
ex(3):      abab  ab  abab    abab    ababab    ab  abab      abab  ababab  ab
ex(5):  abababab  ababababab  ab  abab  ababababab  ab  ababab    abab  ababab
ex(8):  abab  abababab  abababab  ababab      abababababab  abab

regexp: a(bb)?c
tree:   ((a(bb)?)c)
length: 2 to 4
ex(0):  ac  ac  ac  ac  ac  ac  ac  ac  ac  ac  ac  ac  ac  ac  ac  ac  ac  ac
ex(1):  ac  ac  abbc  ac  abbc  ac  abbc  abbc  ac  ac  ac  abbc  abbc  ac  ac
ex(2):  abbc  ac  ac  ac  abbc  ac  ac  ac  abbc  ac  ac  ac  abbc  ac  abbc
ex(3):  abbc  ac  ac  abbc  ac  ac  abbc  ac  abbc  ac  ac  ac  abbc  abbc  ac
ex(5):  ac  abbc  ac  ac  ac  ac  abbc  ac  abbc  ac  ac  ac  ac  abbc  abbc
ex(8):  ac  abbc  abbc  ac  abbc  abbc  abbc  ac  ac  abbc  ac  abbc  abbc  ac

regexp: ((ab))*
tree:   (ab)*
length: 0 to *
ex(0):                                                                        
ex(1):      ab    ab    ab  ab        ab  ab        ab        ab        ab    
ex(2):  ab  ab    abab  abab  ab  abab  ab  abab  ab  abab    ab      abab  ab
ex(3):      abab  ab  abab    abab    ababab    ab  abab      abab  ababab  ab
ex(5):  abababab  ababababab  ab  abab  ababababab  ab  ababab    abab  ababab
ex(8):  abab  abababab  abababab  ababab      abababababab  abab

regexp: ((ab)*)
tree:   (ab)*
length: 0 to *
ex(0):                                                                        
ex(1):      ab    ab    ab  ab        ab  ab        ab        ab        ab    
ex(2):  ab  ab    abab  abab  ab  abab  ab  abab  ab  abab    ab      abab  ab
ex(3):      abab  ab  abab    abab    ababab    ab  abab      abab  ababab  ab
ex(5):  abababab  ababababab  ab  abab  ababababab  ab  ababab    abab  ababab
ex(8):  abab  abababab  abababab  ababab      abababababab  abab

regexp: a(bc)*d
tree:   ((a(bc)*)d)
length: 2 to *
ex(0):  ad  ad  ad  ad  ad  ad  ad  ad  ad  ad  ad  ad  ad  ad  ad  ad  ad  ad
ex(1):  ad  ad  abcd  ad  abcd  ad  abcd  abcd  ad  ad  ad  abcd  abcd  ad  ad
ex(2):  abcbcd  abcbcd  abcd  ad  abcbcd  ad  abcbcd  ad  abcbcd  ad  abcd  ad
ex(3):  ad  abcd  ad  abcd  ad  abcbcd  abcd  ad  abcbcd  abcd  abcbcd
ex(5):  ad  ad  abcbcd  abcd  abcd  ad  ad  ad  abcbcbcd  abcbcd  abcbcbcbcd
ex(8):  abcd  abcbcbcbcd  abcbcbcd  abcbcbcd  abcbcd  abcbcbcbcbcd

regexp: a(bcd)+e
tree:   ((a((bc)d)+)e)
length: 5 to *
ex(0):  abcde  abcde  abcde  abcde  abcde  abcde  abcde  abcde  abcde  abcde
ex(1):  abcde  abcde  abcde  abcde  abcde  abcde  abcde  abcde  abcde  abcde
ex(2):  abcde  abcde  abcdbcde  abcde  abcdbcde  abcde  abcdbcde  abcdbcde
ex(3):  abcde  abcde  abcdbcdbcde  abcdbcdbcde  abcde  abcde  abcde
ex(5):  abcde  abcde  abcdbcdbcdbcdbcde  abcde  abcdbcdbcdbcde  abcdbcde  abcde
ex(8):  abcdbcdbcde  abcde  abcde  abcdbcdbcdbcdbcdbcdbcdbcde

regexp: (ab)*(cd)*(ef)*
tree:   (((ab)*(cd)*)(ef)*)
length: 0 to *
ex(0):                                                                        
ex(1):  ef  cd  abcd  ef  ab  cd  ef    ab  cd  abef  ef  ef  cd  ef  ab  cd  
ex(2):  ababcdcdefef  cdcd  ababcdefef  abcdcdefef  ab  ababef  ababcdef  
ex(3):  cdefef  ababefef    efef  abefef  abcdcdcdef  abcdefef
ex(5):  ababababcdcdefefefef  ababababefefef  abababcdcdcdefefef
ex(8):  efefefefef  ababababababababcdcdcdefefefefefef

regexp: (ab)+(cd)+(ef)+
tree:   (((ab)+(cd)+)(ef)+)
length: 6 to *
ex(0):  abcdef  abcdef  abcdef  abcdef  abcdef  abcdef  abcdef  abcdef  abcdef
ex(1):  abcdef  abcdef  abcdef  abcdef  abcdef  abcdef  abcdef  abcdef  abcdef
ex(2):  abcdefef  abcdcdef  ababcdcdef  abcdefef  ababcdef  abcdcdef  abcdefef
ex(3):  abababcdefef  abcdcdefef  abcdcdcdefefef  ababcdcdcdefef
ex(5):  abababababcdcdcdefefefefef  ababcdcdcdcdefefefefef  abababcdcdcdcdef
ex(8):  abcdcdcdef  ababababcdcdcdcdcdefef  abababababababcdcdcdcdcdef

regexp: (ab)?(cd)?(ef)?
tree:   (((ab)?(cd)?)(ef)?)
length: 0 to 6
ex(0):                                                                        
ex(1):  ef  cd  abcd  ef  ab  cd  ef    ab  cd  abef  ef  ef  cd  ef  ab  cd  
ex(2):    cdef  ef  abef  abcd  cd  abcd  abcd  ef  cd        ab  abcdef  abcd
ex(3):    ef  abcdef  ef  ab  cdef  abcd  abef  ab  cdef    abcdef  abcd  abef
ex(5):  cd  cd  ab    abef  ab  ab    abcdef  cdef  abef    abcd    abef    ef
ex(8):  cd  cd  abcd  ef  ef  abef    ef  cdef  ab  ef  cdef  cdef  abef  abcd

regexp: (ab)+(cd)*(ef)?
tree:   (((ab)+(cd)*)(ef)?)
length: 2 to *
ex(0):  ab  ab  ab  ab  ab  ab  ab  ab  ab  ab  ab  ab  ab  ab  ab  ab  ab  ab
ex(1):  ab  abcd  abcd  abcdef  ab  abef  abcd  ab  abcd  ab  abcd  ab  abcd
ex(2):  ababcdef  abcdcd  abcd  abcdcd  abab  abcdef  ab  ababcdcd  abcdef  ab
ex(3):  abababcd  ababcdcdcdef  abababcdef  abcdcd  abcdcdef  ababef  abcdcd
ex(5):  ababababcdcd  ababab  abababcdcd  ababababef  abef  ababcdcdcdcdcdef
ex(8):  ababababababababcd  abababababababcdcdcdcdcdcdcd  abababababcdcdcdef
