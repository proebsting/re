
# nested parentheses

regexp: ((a))
tree:   a
length: 1 to 1
ex(0):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(1):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(2):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(3):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(5):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(8):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a

regexp: (((a)))
tree:   a
length: 1 to 1
ex(0):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(1):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(2):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(3):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(5):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a
ex(8):  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a

regexp: (((a*)))
tree:   a*
length: 0 to *
ex(0):                                                                        
ex(1):      a    a    a  a        a  a        a        a        a        a    a
ex(2):  aa  a  aa  a  aa  a  aa    a      aa  a  a          aa  a    a  a    
ex(3):      aa  aaa  a  aa  aa  aaa  aaa    a  a  aaa  aa    aaa  aa  a  a  
ex(5):  aaa      aa  a  aaaa  aaa  aa  aa      aa  aa  aa  aaaa  aaaa    aaa
ex(8):  aaa  a  a  aaaaaaaa  aaaaa  aaaaa    aaaaaa  aaa  a  aaaaaaa  aaaaa

regexp: (((a)*))
tree:   a*
length: 0 to *
ex(0):                                                                        
ex(1):      a    a    a  a        a  a        a        a        a        a    a
ex(2):  aa  a  aa  a  aa  a  aa    a      aa  a  a          aa  a    a  a    
ex(3):      aa  aaa  a  aa  aa  aaa  aaa    a  a  aaa  aa    aaa  aa  a  a  
ex(5):  aaa      aa  a  aaaa  aaa  aa  aa      aa  aa  aa  aaaa  aaaa    aaa
ex(8):  aaa  a  a  aaaaaaaa  aaaaa  aaaaa    aaaaaa  aaa  a  aaaaaaa  aaaaa

regexp: (((a))*)
tree:   a*
length: 0 to *
ex(0):                                                                        
ex(1):      a    a    a  a        a  a        a        a        a        a    a
ex(2):  aa  a  aa  a  aa  a  aa    a      aa  a  a          aa  a    a  a    
ex(3):      aa  aaa  a  aa  aa  aaa  aaa    a  a  aaa  aa    aaa  aa  a  a  
ex(5):  aaa      aa  a  aaaa  aaa  aa  aa      aa  aa  aa  aaaa  aaaa    aaa
ex(8):  aaa  a  a  aaaaaaaa  aaaaa  aaaaa    aaaaaa  aaa  a  aaaaaaa  aaaaa

regexp: (((a)))*
tree:   a*
length: 0 to *
ex(0):                                                                        
ex(1):      a    a    a  a        a  a        a        a        a        a    a
ex(2):  aa  a  aa  a  aa  a  aa    a      aa  a  a          aa  a    a  a    
ex(3):      aa  aaa  a  aa  aa  aaa  aaa    a  a  aaa  aa    aaa  aa  a  a  
ex(5):  aaa      aa  a  aaaa  aaa  aa  aa      aa  aa  aa  aaaa  aaaa    aaa
ex(8):  aaa  a  a  aaaaaaaa  aaaaa  aaaaa    aaaaaa  aaa  a  aaaaaaa  aaaaa

regexp: ((a*b)@(c*d)#)*
tree:   ((((a*b)@)(c*d))#)*
length: 0 to *
ex(0):                                                                        
ex(1):      b@cd#    ab@d#      ab@d#      b@d#    b@d#    b@d#    b@cd#  
ex(2):  aab@cd#  b@cd#b@d#  ab@cd#b@d#      ab@d#ab@cd#      aab@ccd#b@ccd#  
ex(3):  ab@cccd#  b@cccd#aab@cd#  b@cccd#  aab@ccd#b@cccd#b@cd#  aab@d#aab@d#  
ex(5):  aaaab@d#aaab@ccccd#b@cd#ab@cccccd#
ex(8):  aaab@cccd#aaab@cccccd#aab@d#    

regexp: ((b|f)(a|e))*
tree:   ((b|f)(a|e))*
length: 0 to *
ex(0):                                                                        
ex(1):      be    fa      fa      ba    ba    ba    be    ba  ba  be        fa
ex(2):      babe      babe    befa  feba    fe  fe      fafa  baba  babe  be
ex(3):  be  bababa  fefabe  babefe  be  feba    fabafe  febebe  babeba  be    
ex(5):  fabeba  bafe  befebebabe  babafa  bababebaba  bafafe  bafabefa  ba
ex(8):  febabafafebefebe  fafa  bebabafabe  fabebabe  befafa  befafebabafa  fe

regexp: ((n|t)(o|e)+)*
tree:   ((n|t)(o|e)+)*
length: 0 to *
ex(0):                                                                        
ex(1):      ne    to      to      no    no    no    ne    no  no  ne        to
ex(2):      note  notoo  tetoo    toe        teno    none  nee  teto  notee
ex(3):  toe  toootoo  teeteoe  noenenooo  noetoeo  noetoee  nooo  too  
ex(5):  teeoonooee    noo  tetooooe    teeeotenoooe  noeooetooeooneneoeo
ex(8):  toooooeeo    neeeeeootoeeoteoooeeeotooooooneeee
