Options: -R -T -g -h -i -l -v -I 0

         # irregular (i.e. illegal) expressions

ERROR:   )
    rx: unmatched ')': in ")"

ERROR:   (
    rx: unclosed '(': in "("

ERROR:   abc)
    rx: unmatched ')': in "abc)"

ERROR:   (def
    rx: unclosed '(': in "(def"

ERROR:   g|h)
    rx: unmatched ')': in "g|h)"

ERROR:   i|j|k)
    rx: unmatched ')': in "i|j|k)"

ERROR:   (m|n
    rx: unclosed '(': in "(m|n"

ERROR:   (o|p|q
    rx: unclosed '(': in "(o|p|q"

ERROR:   \
    rx: '\' at end: in "\"

ERROR:   abc\
    rx: '\' at end: in "abc\"

ERROR:   [
    rx: unclosed '[': in "["

ERROR:   [^
    rx: unclosed '[': in "[^"

ERROR:   []
    rx: unclosed '[': in "[]"

ERROR:   [^]
    rx: unclosed '[': in "[^]"

ERROR:   [\]
    rx: unclosed '[': in "[\]"

ERROR:   [abc
    rx: unclosed '[': in "[abc"

ERROR:   [def\]
    rx: unclosed '[': in "[def\]"

ERROR:   [t-f]
    rx: invalid range: in "[t-f]"

ERROR:   a{z
    rx: malformed "{m,n}": in "a{z"

ERROR:   a{1z
    rx: malformed "{m,n}": in "a{1z"

ERROR:   a{1,z
    rx: malformed "{m,n}": in "a{1,z"

ERROR:   a{1,2z
    rx: malformed "{m,n}": in "a{1,2z"

ERROR:   a{1,2bz
    rx: malformed "{m,n}": in "a{1,2bz"

ERROR:   a{}z
    rx: malformed "{m,n}": in "a{}z"

ERROR:   a{,}z
    rx: malformed "{m,n}": in "a{,}z"

ERROR:   a{1,,2}z
    rx: malformed "{m,n}": in "a{1,,2}z"

ERROR:   a{,2}z
    rx: malformed "{m,n}": in "a{,2}z"

ERROR:   a{2,1}z
    rx: malformed "{m,n}": in "a{2,1}z"

ERROR:   a{p,3}z
    rx: malformed "{m,n}": in "a{p,3}z"

ERROR:   a{4,q}z
    rx: malformed "{m,n}": in "a{4,q}z"

ERROR:   a{x,y}z
    rx: malformed "{m,n}": in "a{x,y}z"

ERROR:   a{x}z
    rx: malformed "{m,n}": in "a{x}z"

ERROR:   a{xyzzy}z
    rx: malformed "{m,n}": in "a{xyzzy}z"

ERROR:   a++
    rx: multiple adjacent duplication symbols: in "a++"

ERROR:   b**
    rx: multiple adjacent duplication symbols: in "b**"

ERROR:   c??
    rx: prefer-fewer '?' unimplemented: in "c??"

ERROR:   d{2}{3}
    rx: multiple adjacent duplication symbols: in "d{2}{3}"

ERROR:   e{5}?
    rx: prefer-fewer '?' unimplemented: in "e{5}?"
0 expression(s) loaded
(38 expression(s) rejected)
