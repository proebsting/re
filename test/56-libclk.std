
# RegExLib.com -- browse -- Dates and Times

#

# 981. 24-hour time hh:mm[:ss]

regexp: (([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(:([0-5]?[0-9]))?
tree:   (((([01]?[0-9]))|((2[0-3]))):([0-5]?[0-9])(:([0-5]?[0-9]))?)
length: 3 to 8
ex(0):  1:0  1:0  20:0  0:2  22:8  21:7  21:4  0:3  3:0  22:8  7:6  22:0  7:6
ex(1):  22:0  21:9  6:07  22:0:11  20:9  9:5  20:0:09  08:47  18:7  06:16
ex(2):  21:34:19  21:37:6  08:35:40  3:39  23:52  12:44:9  22:41  04:6:40  6:1
ex(3):  1:35:25  07:9  23:4  9:5:37  22:12  9:2:20  20:3  03:9:3  5:1  5:2
ex(5):  0:24:6  23:0:2  21:09  20:9  20:2  22:20:8  20:1  20:7  23:2  23:9:1
ex(8):  00:1:6  02:0  22:53:5  08:43:1  6:22  23:3:9  5:59:9  22:4  23:8:47

# 193. Date in MySQL DB format

regexp: ([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})
tree:   (([0-9]{4})-([0-9]{1,2})-([0-9]{1,2}))
length: 8 to 10
ex(0):  7016-8-2  7810-0-9  4434-0-5  4906-6-0  1817-0-5  1985-7-8  6248-1-9
ex(1):  6221-0-7  4442-1-7  3051-4-7  6859-5-2  4236-1-8  4363-2-6  7690-2-6
ex(2):  2138-4-1  8350-21-4  0799-87-17  7604-6-40  6378-92-9  0201-3-24
ex(3):  3408-4-87  3766-82-89  5175-0-31  2090-7-8  3922-27-93  7758-0-0
ex(5):  6290-25-37  2942-0-2  7941-51-4  1429-24-5  1874-48-3  9917-6-50
ex(8):  0486-8-0  2315-71-0  6515-5-12  4376-84-40  6357-3-41  4986-0-78

# 235. "Improved date validation" (M*/D*/Y*) 1920-2019

regexp: ((0?[13578]|10|12)(-|\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[01]?))(-|\/)((19)([2-9])(\d{1})|(20)([01])(\d{1})|([8901])(\d{1}))|(0?[2469]|11)(-|\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[0]?))(-|\/)((19)([2-9])(\d{1})|(20)([01])(\d{1})|([8901])(\d{1})))
tree:   (((((0?[13578])|(10)|(12))((-)|(/))((([1-9]))|((0[1-9]))|(([12])([0-9]?))|((3[01]?)))((-)|(/))(((19)([2-9])([0-9]{1}))|((20)([01])([0-9]{1}))|(([0189])([0-9]{1}))))|(((0?[2469])|(11))((-)|(/))((([1-9]))|((0[1-9]))|(([12])([0-9]?))|((30?)))((-)|(/))(((19)([2-9])([0-9]{1}))|((20)([01])([0-9]{1}))|(([0189])([0-9]{1}))))))
length: 6 to 10
ex(0):  8/02/12  9/4/1927  10/3-11  12/2-2000  11-1-2001  12/03-1935  10/1/1961
ex(1):  12-01-1948  10-2/1977  10/8-1936  1/1/1928  6/22/12  12/01/2008
ex(2):  12/3-94  03-30-1987  11/5-1941  6/1/2014  12/1-1964  2-2-96  12-1-19
ex(3):  11/30-2018  10-8/90  11-1-2001  10/9/1952  11-9/1972  11-02-2008
ex(5):  11-2-1956  10-05-1948  01/14/09  10/3-1926  06/3-1962  10-3-2015
ex(8):  10/1/18  10-13/18  7/6/2014  11-3-1951  3/31-2004  10-6/1935  6-03-86

# 406. Full names of the months

regexp: (?:J(anuary|u(ne|ly))|February|Ma(rch|y)|A(pril|ugust)|(((Sept|Nov|Dec)em)|Octo)ber)
ERROR:  rx: '(?...' unimplemented: in "(?:J(anuary|u(ne|ly))|February|Ma(rch|y)|A(pril|ugust)|(((Sept|Nov|Dec)em)|Octo)ber)"

# 969. RFC2822 date

regexp: (?:\s*(Sun|Mon|Tue|Wed|Thu|Fri|Sat),\s*)?(0?[1-9]|[1-2][0-9]|3[01])\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+(19[0-9]{2}|[2-9][0-9]{3}|[0-9]{2})\s+(2[0-3]|[0-1][0-9]):([0-5][0-9])(?::(60|[0-5][0-9]))?\s+([-\+][0-9]{2}[0-5][0-9]|(?:UT|GMT|(?:E|C|M|P)(?:ST|DT)|[A-IK-Z]))(\s*\((\\\(|\\\)|(?<=[^\\])\((?<C>)|(?<=[^\\])\)(?<-C>)|[^\(\)]*)*(?(C)(?!))\))*\s*
ERROR:  rx: '(?...' unimplemented: in "(?:\s*(Sun|Mon|Tue|Wed|Thu|Fri|Sat),\s*)?(0?[1-9]|[1-2][0-9]|3[01])\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+(19[0-9]{2}|[2-9][0-9]{3}|[0-9]{2})\s+(2[0-3]|[0-1][0-9]):([0-5][0-9])(?::(60|[0-5][0-9]))?\s+([-\+][0-9]{2}[0-5][0-9]|(?:UT|GMT|(?:E|C|M|P)(?:ST|DT)|[A-IK-Z]))(\s*\((\\\(|\\\)|(?<=[^\\])\((?<C>)|(?<=[^\\])\)(?<-C>)|[^\(\)]*)*(?(C)(?!))\))*\s*"
