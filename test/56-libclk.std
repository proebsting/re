Options: -R -g -i -l -v -I 0

         # RegExLib.com -- browse -- Dates and Times

         #

         # 981. 24-hour time hh:mm[:ss]

expr 0: (([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(:([0-5]?[0-9]))?
tree:   ((((([01]?[0-9])|(2[0-3])):)([0-5]?[0-9]))(:([0-5]?[0-9]))?)
augmnt: (((((([01]?[0-9])|(2[0-3])):)([0-5]?[0-9]))(:([0-5]?[0-9]))?)#)
length: 3 to 8
-------------------- Examples --------------------
ex(0):  4:6  23:8  8:9  2:1  0:5  6:1  2:1  7:5  8:0  9:7  6:9  20:7  8:2  21:6
ex(1):  3:9:4  21:3:2  21:2  0:8:1  21:9:2  8:39  18:7:07  10:5:4  23:23  20:7
ex(2):  03:8:6  7:07:1  0:46  03:2  02:5  05:8  20:05  8:47:8  7:38:47  20:8
ex(3):  19:3  5:3:23  14:00  00:26  9:1:1  23:6:9  23:20  21:32  2:5:32  04:3
ex(5):  21:6:26  08:21  21:7:00  22:01  16:7:56  6:7  00:41:9  0:10:04  5:59
ex(8):  2:42  21:01  21:0  22:9:3  20:13  20:1:02  6:8:3  16:9  22:06  20:56:7

         # 193. Date in MySQL DB format

expr 1: ([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})
tree:   (((([0-9]{4}-)[0-9]{1,2})-)[0-9]{1,2})
augmnt: (((((((([0-9][0-9])[0-9])[0-9])-)([0-9][0-9]?))-)([0-9][0-9]?))#)
length: 8 to 10
-------------------- Examples --------------------
ex(0):  4436-6-7  8887-8-6  1004-8-0  1620-2-8  5483-0-4  7468-7-0  2708-2-0
ex(1):  4390-16-7  3943-4-1  3262-6-8  8900-19-09  6422-83-9  0378-83-7
ex(2):  0497-10-41  4007-02-0  4641-36-5  4628-92-98  1420-1-8  5238-2-9
ex(3):  8832-90-0  6827-79-8  0743-89-65  3634-86-4  7465-9-3  0053-38-88
ex(5):  0592-0-90  1162-51-8  7389-05-6  2199-72-8  2845-37-66  4423-10-50
ex(8):  6999-6-6  7921-19-25  2760-9-9  1287-6-71  7960-6-7  2760-7-1

         # 235. "Improved date validation" (M*/D*/Y*) 1920-2019

expr 2: ((0?[13578]|10|12)(-|\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[01]?))(-|\/)((19)([2-9])(\d{1})|(20)([01])(\d{1})|([8901])(\d{1}))|(0?[2469]|11)(-|\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[0]?))(-|\/)((19)([2-9])(\d{1})|(20)([01])(\d{1})|([8901])(\d{1})))
tree:   (((((((0?[13578])|(10)|(12))(-|/))([1-9]|(0[1-9])|([12][0-9]?)|(3[01]?)))(-|/))((((19)[2-9])[0-9])|(((20)[01])[0-9])|([0189][0-9])))|((((((0?[2469])|(11))(-|/))([1-9]|(0[1-9])|([12][0-9]?)|(30?)))(-|/))((((19)[2-9])[0-9])|(((20)[01])[0-9])|([0189][0-9]))))
augmnt: ((((((((0?[13578])|(10)|(12))(-|/))([1-9]|(0[1-9])|([12][0-9]?)|(3[01]?)))(-|/))((((19)[2-9])[0-9])|(((20)[01])[0-9])|([0189][0-9])))|((((((0?[2469])|(11))(-|/))([1-9]|(0[1-9])|([12][0-9]?)|(30?)))(-|/))((((19)[2-9])[0-9])|(((20)[01])[0-9])|([0189][0-9]))))#)
length: 6 to 10
-------------------- Examples --------------------
ex(0):  3/3-1962  12-9-1992  6-5/2009  2-1-2006  1-3-2007  12/1-2002  12-2-2011
ex(1):  07-08-1962  03-05/1994  10-2-80  11/1-2019  06-3-1980  12-5/18
ex(2):  7/7-1983  11/3-2004  10/3/2016  11-9/2004  12/7-99  07/30-2010
ex(3):  10/3-2003  10/07/1987  5/9/12  06-05-1999  12/3-17  2-2-2010
ex(5):  10/3-99  10-04-2012  09-2/1999  01/07/1979  11-5-84  02-07-96  10-30-90
ex(8):  12/06-1959  11-09/1934  11/3-2012  06-02/2017  11/07-1979  10/1-2008

         # 406. Full names of the months

expr 3: (?:J(anuary|u(ne|ly))|February|Ma(rch|y)|A(pril|ugust)|(((Sept|Nov|Dec)em)|Octo)ber)
tree:   ((J((((((an)u)a)r)y)|(u((ne)|(ly)))))|(((((((Fe)b)r)u)a)r)y)|((Ma)(((rc)h)|y))|(A((((pr)i)l)|((((ug)u)s)t)))|((((((((((Se)p)t)|((No)v)|((De)c))e)m)|(((Oc)t)o))b)e)r))
augmnt: (((J((((((an)u)a)r)y)|(u((ne)|(ly)))))|(((((((Fe)b)r)u)a)r)y)|((Ma)(((rc)h)|y))|(A((((pr)i)l)|((((ug)u)s)t)))|((((((((((Se)p)t)|((No)v)|((De)c))e)m)|(((Oc)t)o))b)e)r))#)
length: 3 to 9
-------------------- Examples --------------------
ex(0):  November  March  June  February  April  December  November  August
ex(1):  December  March  July  October  August  August  February  July  January
ex(2):  February  March  August  May  February  March  January  April  January
ex(3):  August  August  November  April  April  February  January  February
ex(5):  August  February  March  July  November  January  October  February
ex(8):  May  October  February  January  February  December  March  March

         # 969. RFC2822 date

ERROR:   (?:\s*(Sun|Mon|Tue|Wed|Thu|Fri|Sat),\s*)?(0?[1-9]|[1-2][0-9]|3[01])\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+(19[0-9]{2}|[2-9][0-9]{3}|[0-9]{2})\s+(2[0-3]|[0-1][0-9]):([0-5][0-9])(?::(60|[0-5][0-9]))?\s+([-\+][0-9]{2}[0-5][0-9]|(?:UT|GMT|(?:E|C|M|P)(?:ST|DT)|[A-IK-Z]))(\s*\((\\\(|\\\)|(?<=[^\\])\((?<C>)|(?<=[^\\])\)(?<-C>)|[^\(\)]*)*(?(C)(?!))\))*\s*
    rx: '(?...' unimplemented: in "(?:\s*(Sun|Mon|Tue|Wed|Thu|Fri|Sat),\s*)?(0?[1-9]|[1-2][0-9]|3[01])\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+(19[0-9]{2}|[2-9][0-9]{3}|[0-9]{2})\s+(2[0-3]|[0-1][0-9]):([0-5][0-9])(?::(60|[0-5][0-9]))?\s+([-\+][0-9]{2}[0-5][0-9]|(?:UT|GMT|(?:E|C|M|P)(?:ST|DT)|[A-IK-Z]))(\s*\((\\\(|\\\)|(?<=[^\\])\((?<C>)|(?<=[^\\])\)(?<-C>)|[^\(\)]*)*(?(C)(?!))\))*\s*"
4 expression(s) loaded
(1 expression(s) rejected)
