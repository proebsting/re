
# RegExLib.com -- browse -- Dates and Times

#

# 981. 24-hour time hh:mm[:ss]

regexp: (([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(:([0-5]?[0-9]))?
tree:   ((((([01]?[0-9])|(2[0-3])):)([0-5]?[0-9]))(:([0-5]?[0-9]))?)
length: 3 to 8
-------------------- Examples --------------------
ex(0):  1:0  1:0  20:0  0:2  22:8  21:7  21:4  0:3  3:0  22:8  7:6  22:0  7:6
ex(1):  22:0  21:9  6:07  22:0:11  20:9  9:5  20:0:09  08:47  18:7  06:16
ex(2):  21:34:19  21:37:6  08:35:40  3:39  23:52  12:44:9  22:41  04:6:40  6:1
ex(3):  1:35:25  07:9  23:4  9:5:37  22:12  9:2:20  20:3  03:9:3  5:1  5:2
ex(5):  0:24:6  23:0:2  21:09  20:9  20:2  22:20:8  20:1  20:7  23:2  23:9:1
ex(8):  00:1:6  02:0  22:53:5  08:43:1  6:22  23:3:9  5:59:9  22:4  23:8:47

# 193. Date in MySQL DB format

regexp: ([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})
tree:   (((([0-9]{4}-)[0-9]{1,2})-)[0-9]{1,2})
length: 8 to 10
-------------------- Examples --------------------
ex(0):  7016-8-2  7810-0-9  4434-0-5  4906-6-0  1817-0-5  1985-7-8  6248-1-9
ex(1):  6221-00-4  6322-1-0  0841-2-17  0791-1-8  8788-4-61  1613-8-21
ex(2):  1384-82-82  3530-2-3  6186-3-8  3265-21-15  9069-02-84  3137-6-7
ex(3):  7064-9-6  9672-24-83  3066-7-98  2495-26-33  5096-11-70  5857-25-8
ex(5):  6500-5-60  6044-88-7  2098-58-80  9355-3-2  9182-3-1  1131-54-86
ex(8):  2481-47-01  3055-5-60  8772-4-53  6620-7-63  9378-5-5  4418-0-41

# 235. "Improved date validation" (M*/D*/Y*) 1920-2019

regexp: ((0?[13578]|10|12)(-|\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[01]?))(-|\/)((19)([2-9])(\d{1})|(20)([01])(\d{1})|([8901])(\d{1}))|(0?[2469]|11)(-|\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[0]?))(-|\/)((19)([2-9])(\d{1})|(20)([01])(\d{1})|([8901])(\d{1})))
tree:   (((((((0?[13578])|(10)|(12))(-|/))([1-9]|(0[1-9])|([12][0-9]?)|(3[01]?)))(-|/))((((19)[2-9])[0-9])|(((20)[01])[0-9])|([0189][0-9])))|((((((0?[2469])|(11))(-|/))([1-9]|(0[1-9])|([12][0-9]?)|(30?)))(-|/))((((19)[2-9])[0-9])|(((20)[01])[0-9])|([0189][0-9]))))
length: 6 to 10
-------------------- Examples --------------------
ex(0):  8/02/12  9/4/1927  10/3-11  12/2-2000  11-1-2001  12/03-1935  10/1/1961
ex(1):  12-01-1948  10-2/1977  10/8-1936  1/1/1928  6/22/12  12/01/2008
ex(2):  12/3-94  03-30-1987  11/5-1941  6/1/2014  12/1-1964  2-2-96  12-1-19
ex(3):  11/30-2018  10-8/90  11-1-2001  10/9/1952  11-9/1972  11-02-2008
ex(5):  11-2-1956  10-05-1948  01/14/09  10/3-1926  06/3-1962  10-3-2015
ex(8):  10/1/18  10-13/18  7/6/2014  11-3-1951  3/31-2004  10-6/1935  6-03-86

# 406. Full names of the months

regexp: (?:J(anuary|u(ne|ly))|February|Ma(rch|y)|A(pril|ugust)|(((Sept|Nov|Dec)em)|Octo)ber)
tree:   ((J((((((an)u)a)r)y)|(u((ne)|(ly)))))|(((((((Fe)b)r)u)a)r)y)|((Ma)(((rc)h)|y))|(A((((pr)i)l)|((((ug)u)s)t)))|((((((((((Se)p)t)|((No)v)|((De)c))e)m)|(((Oc)t)o))b)e)r))
length: 3 to 9
-------------------- Examples --------------------
ex(0):  November  February  January  May  April  August  September  February
ex(1):  January  October  April  June  March  February  May  August  November
ex(2):  November  December  October  April  May  January  November  June
ex(3):  December  March  October  December  February  April  October  August
ex(5):  April  April  February  May  March  March  February  March  April
ex(8):  January  February  February  October  February  July  February

# 969. RFC2822 date

regexp: (?:\s*(Sun|Mon|Tue|Wed|Thu|Fri|Sat),\s*)?(0?[1-9]|[1-2][0-9]|3[01])\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+(19[0-9]{2}|[2-9][0-9]{3}|[0-9]{2})\s+(2[0-3]|[0-1][0-9]):([0-5][0-9])(?::(60|[0-5][0-9]))?\s+([-\+][0-9]{2}[0-5][0-9]|(?:UT|GMT|(?:E|C|M|P)(?:ST|DT)|[A-IK-Z]))(\s*\((\\\(|\\\)|(?<=[^\\])\((?<C>)|(?<=[^\\])\)(?<-C>)|[^\(\)]*)*(?(C)(?!))\))*\s*
ERROR:  rx: '(?...' unimplemented: in "(?:\s*(Sun|Mon|Tue|Wed|Thu|Fri|Sat),\s*)?(0?[1-9]|[1-2][0-9]|3[01])\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+(19[0-9]{2}|[2-9][0-9]{3}|[0-9]{2})\s+(2[0-3]|[0-1][0-9]):([0-5][0-9])(?::(60|[0-5][0-9]))?\s+([-\+][0-9]{2}[0-5][0-9]|(?:UT|GMT|(?:E|C|M|P)(?:ST|DT)|[A-IK-Z]))(\s*\((\\\(|\\\)|(?<=[^\\])\((?<C>)|(?<=[^\\])\)(?<-C>)|[^\(\)]*)*(?(C)(?!))\))*\s*"
