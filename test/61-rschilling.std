
expr 0: ^\s*@Test

expr 1: enabled\s*=\s*false

expr 2: \s*@Test.*groups\s*=\s*("unstable|Array\("unstable"\))|@Category\(UnstableTest\.class\).*

expr 3: .*Test.(java|scala)

expr 4: .* (FATAL|ERROR|WARN|INFO|DEBUG|TRACE)

expr 5: ([a-zA-Z0-9/]*Command.java)

expr 6: COMMAND_ID\s*=\s*([0-9]+)\s*;

expr 7: .*Received new cluster view.*\|([0-9]+). \[(.*)\].*

expr 8: .*Received new cluster view.*\|%s. \[(.*)\].*

ERROR:   (\w+)::\1(\s*)\((.*)\)(\s*):(\s*)Expression\(EXPRESSION_CONSTRUCTOR_PARAMETER_VALUES\)
    rx: \1 (backref) unimplemented: in "(\w+)::\1(\s*)\((.*)\)(\s*):(\s*)Expression\(EXPRESSION_CONSTRUCTOR_PARAMETER_VALUES\)"

ERROR:   <a.*?>(.*?)</a>
    rx: prefer-fewer '?' unimplemented: in "<a.*?>(.*?)</a>"

ERROR:   <.*?>
    rx: prefer-fewer '?' unimplemented: in "<.*?>"

ERROR:   <div class="block">(.*?)</div>
    rx: prefer-fewer '?' unimplemented: in "<div class="block">(.*?)</div>"

ERROR:   <caption><span>(.*?)</span>
    rx: prefer-fewer '?' unimplemented: in "<caption><span>(.*?)</span>"

ERROR:   ^<td class="colLast"><code><strong><a href="[^>]*\.([^>]*?)\.html" title="class in[^>]*">
    rx: prefer-fewer '?' unimplemented: in "^<td class="colLast"><code><strong><a href="[^>]*\.([^>]*?)\.html" title="class in[^>]*">"

ERROR:   ^<td class="colLast"><code><strong><a href="[^>]*#([^>]*?)">
    rx: prefer-fewer '?' unimplemented: in "^<td class="colLast"><code><strong><a href="[^>]*#([^>]*?)">"

ERROR:   ^<td class="colOne"><code><strong><a href="[^>]*#([^>]*?)">
    rx: prefer-fewer '?' unimplemented: in "^<td class="colOne"><code><strong><a href="[^>]*#([^>]*?)">"

expr 9: ^<h3>Method Detail</h3>$

ERROR:   ^(?:</a>)?<a name="([^>]*?)">$
    rx: prefer-fewer '?' unimplemented: in "^(?:</a>)?<a name="([^>]*?)">$"

ERROR:   <a(\s+.*?)>
    rx: prefer-fewer '?' unimplemented: in "<a(\s+.*?)>"

expr 10: ""(?:\s+([a-z]+)\s*=\s*("[^"]*"|'[^']?'|[^'"\s]+))+""

expr 11: ^[^\u0000-\u0008\u000B-\u000C\u000E-\u001F\uFFFE\uFFFF]*$

ERROR:   cursor(?=(%d|\$i))],
    rx: '(?...' unimplemented: in "cursor(?=(%d|\$i))],"

ERROR:   test(?!_format)],
    rx: '(?...' unimplemented: in "test(?!_format)],"

expr 12: \{RECT_(?:CONFIG|LOCAL), "([^"]+)

expr 13: (?:CONFIG|LOCAL) (\S+)\s+(\S+)\s+(\S+)

expr 14: ts:cv:: CONFIG (\S+)\s+(\S+)\s+(\S+)

expr 15: ^[ \t]+$

ERROR:   ^(\t|[ ]{1,%d}
    rx: malformed "{m,n}": in "^(\t|[ ]{1,%d}"

expr 16: [ ,]+

ERROR:   -\*-\s*([^\r\n]*?)\s*-\*-
    rx: prefer-fewer '?' unimplemented: in "-\*-\s*([^\r\n]*?)\s*-\*-"

ERROR:   (.*?)\t
    rx: prefer-fewer '?' unimplemented: in "(.*?)\t"

expr 17: \-([0-9]+)

ERROR:   \[(.*?)\]\s\-\s(.*)$
    rx: prefer-fewer '?' unimplemented: in "\[(.*?)\]\s\-\s(.*)$"

ERROR:   \<th\scolspan="2">(.*?)</th>
    rx: prefer-fewer '?' unimplemented: in "\<th\scolspan="2">(.*?)</th>"

ERROR:   href=\"(.*?
    rx: prefer-fewer '?' unimplemented: in "href=\"(.*?"

ERROR:   \<td.*?\>(.*?)\<
    rx: prefer-fewer '?' unimplemented: in "\<td.*?\>(.*?)\<"

ERROR:   \<td\>(.*?)(\s(.*?))?\<
    rx: prefer-fewer '?' unimplemented: in "\<td\>(.*?)(\s(.*?))?\<"

ERROR:   \<a\shref=\"(.*?)"\>(.*?)\<
    rx: prefer-fewer '?' unimplemented: in "\<a\shref=\"(.*?)"\>(.*?)\<"

expr 18: ^.*/?bin/.*.py

expr 19: ^([2-9]\.[0-9])\.[0-9]\.(Final|(Alpha|Beta|CR)[1-9][0-9]?)$

expr 20: ([0-9])\.([0-9])\.([0-9]).*

expr 21: (?P<name>[^=]+)="(?P<value>[^"]*)" *

expr 22: (?P<name>[^:]+):(?P<value>[^,]*),?

expr 23: (?P<name>[^=]+)="(?P<value>[^"]*)" *

expr 24: (?P<name>[^:]+):(?P<value>[^,]*),?

ERROR:   ^<CHAPTER ID=.*?>$
    rx: prefer-fewer '?' unimplemented: in "^<CHAPTER ID=.*?>$"

ERROR:   ^<.*?>$
    rx: prefer-fewer '?' unimplemented: in "^<.*?>$"

expr 25: ^\d+\.?$

expr 26: [^A-Z0-9]

expr 27: cygwin|mingw

expr 28: darwin|aix

expr 29: .*capacity.*operations.*bandwidth

expr 30: .*pool.*alloc.*free.*read.*write.*read.*write

expr 31: .*-----.*-----.*-----

ERROR:   <([^>]*?)>
    rx: prefer-fewer '?' unimplemented: in "<([^>]*?)>"

expr 32: [\s\u0000-\u001F@,:<>\u007F]

expr 33: ^------------------.* testing 

ERROR:   (^==== |^------------------.* testing )
    rx: Embedded '^' unimplemented: in "(^==== |^------------------.* testing )"

expr 34: ^\s*T_VIRTUAL_CALL: (\d+) calls on (.*):$

expr 35: ^\s*#(\d+)\s*(.*) \[(0x[0-9A-Za-z]+)\]$

expr 36: [\x00-\x31\x7f-\xa0]

expr 37: [\x00-\x31\x7f-\xff]

expr 38: \\([^uUx]|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{2}|U[0-9a-fA-F]{8})

expr 39: "((?:[^"\\]|\\.)*)"

expr 40: '((?:[^'\\]|\\.)*)'

expr 41: \\(.)

expr 42: [,()]+

ERROR:   (^.*)_[0-9]+$
    rx: Embedded '^' unimplemented: in "(^.*)_[0-9]+$"

expr 43: ^db\d+$

expr 44: ^\s*#\s*tcollector.(\w+)\s*=\s*(.+)$

expr 45: [\s\w]+:[\s\w]+$

expr 46: ^TEST-.*\.xml$

expr 47: ^([^-]+-[^-]+)-(.*)\.fail$

expr 48: [\x00-\x1f\\"\b\f\n\r\t]

expr 49: ([\\"]|[^\ -~])

expr 50: [\x80-\xff]

ERROR:   (.*?)(["\\\x00-\x1f])
    rx: prefer-fewer '?' unimplemented: in "(.*?)(["\\\x00-\x1f])"

expr 51: [ \t\n\r]*

expr 52: [\x00-\x1f\\"\b\f\n\r\t]

expr 53: ([\\"]|[^\ -~])

expr 54: [\x80-\xff]

ERROR:   <a href="(.*?)">(.*?)</a>
    rx: prefer-fewer '?' unimplemented: in "<a href="(.*?)">(.*?)</a>"

ERROR:   <a id="(.*?)".*?>(.*?)</a>
    rx: prefer-fewer '?' unimplemented: in "<a id="(.*?)".*?>(.*?)</a>"

ERROR:   \b[a-zA-Z_]+=(?:"(?:\\"|[^"])*"' + '|(?:\\\\.|[^"\'\\s])*' + r"|'(?:\\'|[^'])*
    rx: \b (boundary) unimplemented: in "\b[a-zA-Z_]+=(?:"(?:\\"|[^"])*"' + '|(?:\\\\.|[^"\'\\s])*' + r"|'(?:\\'|[^'])*"

expr 55: (\d+) total matching documents

expr 56: %s\.[wj]ar$

expr 57: \.(?:[wj]ar|pom)$

expr 58: \.(?:pom|[jw]ar)$

expr 59: %s\.[jw]ar$

expr 60: ^pom.xml.template$

expr 61: ^.*/?bin/.*.py

expr 62: ^([4-9]\.[0-9])\.[0-9]\.(Final|(Alpha|Beta|CR)[1-9][0-9]?)$

expr 63: ([0-9])\.([0-9])\.([0-9]).*

expr 64: [\.\-].split(version)

expr 65: \s*private static final (String (MAJOR|MINOR|MICRO|MODIFIER)|boolean SNAPSHOT)

expr 66: ^.*/?bin/.*.py

expr 67: ^([4-9]\.[0-9])\.[0-9]\.(Final|(Alpha|Beta|CR)[1-9][0-9]?)$

expr 68: ([0-9])\.([0-9])\.([0-9]).*

expr 69: [\.\-].split(version)

expr 70: \s*private static final (String (MAJOR|MINOR|MICRO|MODIFIER)|boolean SNAPSHOT)

expr 71: ^.*/?bin/.*.py

expr 72: ^([4-9]\.[0-9])\.[0-9]\.(Final|(Alpha|Beta|CR)[1-9][0-9]?)$

expr 73: ([0-9])\.([0-9])\.([0-9]).*

expr 74: ^.*/?bin/.*.py

expr 75: ^([4-9]\.[0-9])\.[0-9]\.(Final|(Alpha|Beta|CR)[1-9][0-9]?)$

expr 76: ([0-9])\.([0-9])\.([0-9]).*

expr 77: [\.\-].split(version)

expr 78: \s*private static final (String (MAJOR|MINOR|MICRO|MODIFIER)|boolean SNAPSHOT)

expr 79: (?P<params>[\x20-\x3f]*)(?P<final>[\x40-\x7e])

expr 80: \s+

expr 81: ^\s+lib([^=-]+)(?:-[\.0-9]+)?\.so\.[0-9]+ =>

ERROR:   (.*?)(["\\\x00-\x1f])
    rx: prefer-fewer '?' unimplemented: in "(.*?)(["\\\x00-\x1f])"

expr 82: [ \t\n\r]*

expr 83: ^ ?[\?ID] *[1-9 ]*[a-zA-Z]* +(.*)

expr 84: [\.\-].split(version)

expr 85: [A-Za-z_][A-Za-z0-9_]*

expr 86: sockets: used \d+\n

expr 87: \s*<!ENTITY\s+(\S+)\s+"&(?:#38;)?#(\d+);
(31 expression(s) rejected)
